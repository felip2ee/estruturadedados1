#include<stdlib.h>
#include<stdio.h>

#define  MAX  5 // Tamanho

// Definir a ED fila
struct fila {
	int primeiro;
	int final;
	int nro_elementos;
	char elementos[MAX];
};

// Definir o tipo de dados Fila
typedef struct fila Fila;

Fila *criar()
{

	Fila *f;

	f = malloc(sizeof(Fila));
	if (f != NULL) {
		f->primeiro = 0;
		f->final = 0;
		f->nro_elementos = 0;
	}

	return f;
}

void destruir(Fila *f)
{
	if (f != NULL) free(f);
}

int vazia(Fila *f)
{
	if (f->nro_elementos == 0) return 1; // true
	else return 0; // false
}

int cheia(Fila *f)
{
	if (f->nro_elementos == MAX) return 1; // true
	else return 0; // false
}

int inserir(Fila *f, char x)
{
    //if (cheia(f))
	if (cheia(f) == 1)
		return 0;	// false
	else {
		f->nro_elementos = f->nro_elementos + 1;
		f->elementos[ f->final ] = x;

		// avanca o indice Final. Atencao: o vetor eh circular
		if (f->final == (MAX-1))
		    f->final = 0;
		else
		    f->final = f->final + 1;

		return 1;	// true
	}
}
int inserir_contrario(Fila *f, char x)
{
    //if (cheia(f))
	if (cheia(f) == 1)
		return 0;	// false
	else {
		if (f->primeiro == 0)
		    f->primeiro = (MAX-1);
		else
		    f->primeiro = f->primeiro - 1;

		f->nro_elementos = f->nro_elementos + 1;
		f->elementos[ f->primeiro ] = x;

		// avanca o indice Final. Atencao: o vetor eh circular


		return 1;	// true
	}
}

int retirar(Fila *f, char *x)
{
	if (vazia(f) == 1)
		return 0;	// false
	else {
	    f->nro_elementos = f->nro_elementos - 1;
	    *x = f->elementos[ f->primeiro ];

	    if (f->primeiro == (MAX-1))
	        f->primeiro = 0;
	    else f->primeiro = f->primeiro + 1;

		return 1;	// true
	}
}
int retirar_contrario(Fila *f, char *x)
{
	if (vazia(f) == 1)
		return 0;	// false
	else {
	    f->nro_elementos = f->nro_elementos - 1;
	    *x = f->elementos[ f->final - 1 ];

	    if (f->final == 0)
	        f->final = (MAX-1);
	    else f->final = f->final - 1;

		return 1;	// true
	}
}


int main()
{
	Fila *F;
	char c;

	int teste;

	F = criar();
	if (F == NULL) {
		printf("Erro: nao foi possivel criar a fila\n");
		exit(-1);
	}

	for (int i = 0; i < (MAX-1); i++) {
		printf("Digite um caractere: ");
		scanf(" %c", &c);
		inserir(F, c);

	}
	printf("digite char para inserir ao contrario: ");
	scanf(" %c",&c);
	inserir_contrario(F,c);


	while (retirar(F, &c) == 1)
		printf("%c\n", c);


	while( cheia(F) == 0)
	{
		printf("Digite um caractere: ");
		scanf(" %c", &c);
		inserir(F, c);
	}

 
	retirar_contrario(F,&c);
	printf("%c --- removido ao contrario\n",c);

	while (retirar(F, &c) == 1)
		printf("%c --- removido normal\n", c);



	destruir(F);

	return 0;
}
